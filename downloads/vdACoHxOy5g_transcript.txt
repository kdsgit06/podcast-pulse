Foreign hey guys, Justin here. Today we're going to take a look at how to level up your OpenAI API with files and vector stores to make your OpenAI outputs even more dynamic by allowing your OpenAI API assistants and AI models to search your custom content. So let's dive in. Foreign Guys, let's dive in and take a look at how to level up our OpenAI API with custom files. So after you log into the OpenAI API platform, the first thing you're going to want to do is navigate away from the chat and to your storage section of the API interface. Within the storage section, the first thing you're going to see is the file storage. And this is where you're going to upload individual files so that OpenAI has access to those files whenever you're calling the API or an assistant. This is extremely useful if you want to provide anything for reference for OpenAI to be able to go and grab and search when generating content. So think like your white papers, your PDFs, your ebooks that maybe you want your Assistant or your OpenAI model to be able to surface when users are interacting with your app or whatever it is you built. The way to add your files is pretty simple. You click upload, name the file. So I'm going to call this Call recordings for today, and then you can select what kind of upload it's going to be. Is this a fine tuning? Is this something for assistance? Is this user data? Is it batch data, vision data, evals that you're going to use to evaluate your models for today? Let's call it user data because it's call recordings. You hit the upload button. Oh, sorry. You attach your file and then you hit the upload button. So we're going to upload our call recordings. Now that they're in here, you hit the upload button. And if you guys recall, we have already done a video on removing PII from our call recordings so that none of our personally identifiable information is available. If you haven't seen that video, you must watch that before you try to upload call recordings to an AI model for reference. You want to make sure that you're scrubbing all your PII before you do that. So now that I've uploaded my PII removed calls, I can now leverage this file in any of my assistants or any of my custom AI models that I might have built within my API portal. If you guys are wondering how to build assistants or what assistants are, they're basically custom GPTs that you can call via the API. I have a separate video on how to build assistants and use assistance in an automated way that I encourage you to go check out. Now, let's take a look at building a vector store. All right, guys, we just learned how to use a custom file with the OpenAI API portal. Now let's take a look at using the vector stores feature. And vector stores are very similar to custom files. The main difference is vector stores allow you to upload multiple documents into one vector store, which then creates a vectorized database. I know it sounds super technical, but it's basically creating an internal storage of your files within the OpenAI API environment so that your assistants and your OpenAI API can access that information when generating their responses. So for those of you that have, you know, large amounts of content, whether that's, you know, many YouTube videos online that you want to make serviceable to your AI assistant, or, you know, a library of PDFs and other documentation that you want to leverage in a generative way via an assistant or an AI model, vector stores are what you're going to want to leverage instead of individual files. So that being said, when you are within the OpenAI API dashboard instead of files, you're just going to click on vector stores to create a vector store. And you'll notice within this interface, you can name your vector store. So you could name this, you know, call recordings, and you could apply an expiration policy to your vector store if you wanted it to expire at a certain date because the data is stale, or you don't want to make it serviceable past, you know, a certain season. If your business is cyclical, you could do that. I'm going to save my name of my vector store. And then you'll notice you can also create an assistant directly from your vector store that can leverage this vector store. So we just made another video on creating assistants and what assistants can do. But assistants are basically the API equivalent of a custom GPT, where you can create custom GPTs in the chat interface that leverage training data and things like that to generate unique responses within the API, you can create assistants that do the same thing. They can leverage the information within a vector store, they can leverage individual files, they can use web search and custom functions to generate unique content based on your instructions and your prompting for that assistant. It's the exact same thing as building a custom GPT within the chat function. But you can imagine how a vector store would be leveraged by an assistant in the same way that you would leverage your your custom GPTs. Now's the fun part. Let's attach some files to our vector store. So just like we did a second ago, I'm just going to upload my call recording files again and this time I'm just going to click on upload, double click. And then if I wanted to add more files, I could click Click here to add more files. For the for the purposes of this demonstration, we're just going to upload our call recordings today. And then there's some advanced options where you can do things like chunking the number of tokens that are allowed to be referenced in a search, and overlap tokens for overlapping between different documents within your vector database or different vectors within your vector database. I don't think most people are going to have a need for manipulating this. I would just go with the system defaults hit attach and boom. Here. Here's your file for all of your pii removed call recordings that can now be leveraged in an assistant or an API model. Leveraging this Vector Store in the future so that is how to create a custom vector store. It's a really cool feature that most people don't know about, and it's a way to empower your assistants to really create that same experience you get with a custom GPT that can be leveraged in an automated way via your APIs. So if you guys like this video, feel free to like and subscribe to my channel. If you want to see more videos like this or you have requests for other features that you'd like me to demo in the future, feel free to leave a comment below. And as always, guys, have a great day.